/**
 * vue-test-utils
 */
module.exports = {
  install: function (Vue, options) {
    options = options || {};
    
    // Warning function
    function warn(name) {
      console.warn('"' + name + '" already exists in instance methods, please change it through plugin options.');
    }

    // All utils are stored here.
    var utils = {
      // Just like jQuery's $ function, but return the first element it matched.
      // If none is matched, null will be returned.
      '$': function(selector) {
        return this.$el.querySelector(selector);
      },
      // Just like jQuery's $ function, but return a NodeList for matched elements.
      // If none is matched, null will be returned.
      '$$': function(selector) {
        return this.$el.querySelectorAll(selector);
      },
      // Just like jQuery's $.trigger function.
      '$fire': function(selector, evt_type, evt_options) {
        var evt = document.createEvent("HTMLEvents");
        evt.initEvent(evt_type, true, true);
        evt = Object.assign(evt, evt_options);
        this.$(selector).dispatchEvent(evt);
      }
    };

    for (var name in utils) {
      var property = options[name] || name;

      if ( !Vue.prototype.hasOwnProperty(property) ) {
        Vue.prototype[property] = utils[name];
      } else {
        warn(property);
      }
    }
  }
};
